


import pyodbc
import pandas as pd
import warnings
import json

# Suppress UserWarnings from pandas
warnings.filterwarnings("ignore", category=UserWarning)

# Load configuration from config.json
with open('config.json', 'r') as file:
    config = json.load(file)

# Get database settings from the JSON file
db_file = config['database']['db_file']

# Set up the connection to the Access database
conn_str = (
    r'DRIVER={Microsoft Access Driver (*.mdb, *.accdb)};'
    r'DBQ=' + db_file + ';'
)

# Connect to the Access database
conn = pyodbc.connect(conn_str)

# Iterate through each table in the configuration
for table in config['tables']:
    table_name = table['table_name']
    csv_file_path = table['csv_file_path']

    # Query the table
    query = f"SELECT * FROM {table_name}"

    # Read the query results into a pandas DataFrame
    df = pd.read_sql(query, conn)

    # Save the DataFrame as a CSV file
    df.to_csv(csv_file_path, index=False)

    print(f"Table {table_name} has been successfully exported to {csv_file_path}")

# Close the connection
conn.close()
Here's a professional description you can use for your profile or during an interview:

"I successfully designed and implemented an ETL process that met all client requirements, including automation of data extraction, transformation, and loading. The solution incorporates email notifications to report process completion, systematic backup of all processed files, and robust logging mechanisms to ensure traceability and monitoring. This comprehensive approach improved operational efficiency, streamlined workflows, and provided reliable data processing for the client."

Let me know if you'd like to add any specific details!
