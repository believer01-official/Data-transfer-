Sure! Here's the documentation based on the detailed information you provided, structured for clarity and ease of understanding:

---

## **Next Gen Platform (NGP) Documentation**

### **Objective**

The **Next Gen Platform (NGP)** aims to provide personalized offers to Starbucks customers through email. By leveraging machine learning models, data pipelines, and automated workflows, NGP dynamically selects the most relevant offers for customers, delivering them in an efficient and timely manner.

### **Introduction**

NGP is a PySpark-based application scheduled and managed in **Airflow**. It is designed to automate the process of sending personalized Starbucks offers to customers, relying on various data sources, advanced machine learning models, and robust workflows.

The platform works in three major phases:
1. **Feature Extraction** – Collecting and preparing data for model training.
2. **Model Training** – Training models to assign relevant offers to customers.
3. **Monarch Workflow** – Assigning offers to customers and ensuring the proper deployment of personalized email offers.

### **Phases of NGP**

#### **1. Feature Phase**

The **Feature Phase** is responsible for gathering and preparing data that will be used in model training. 

- **Data Extraction**: Data is pulled from multiple sources, such as **EDAP**, and is consolidated into a **Delta table**.
- **Code Generation**: Code is dynamically generated during pipeline execution and stored in two locations in **ADLS**.
- **Pipelines**: This phase includes 10 pipelines currently running in the preprod environment.
- **Activities in Feature Phase**:
  - **Concurrency**: Handling parallel processes to ensure efficiency.
  - **Run IDs and DS Values**: These are used to track pipeline executions.
  - **Interactive Clusters**: Used to process the data in real time.
  - **NGP Run Status**: Tracks the overall status of the NGP execution.
  
- **Generated Programs**:
  - **Sensors**: These are used to check if certain conditions in the database are met. There are two types:
    - **Databricks Table Sensor**: Checks for database conditions.
    - **External Sensors**: Ensure previous pipeline completions before data ingestion begins.
  
  - **Feature Ingestion**: Where the actual extraction and loading of data occur.
  - **Sequel Operation Class**: Many feature extraction programs fall under this category.
  - **Anomaly Detection**: The **Expectations** module detects anomalies in the data, generating an HTML file with the detected issues.
  - **Email Notifications**: Emailers are used to notify recipients about detected issues, and these notifications are sent based on certain conditions.

#### **2. Model Training Phase**

The **Model Training Phase** focuses on training machine learning models to assign relevant offers to customers.

- **Types of Offers**:
  - **Product-Based Offers**: Tailored to product recommendations.
  - **Frequency-Based Offers**: Based on the customer's interaction frequency with Starbucks.

- **Types of Models**:
  - **Uplift Model**: This model is trained to assign offers based on uplift, considering factors like customer behavior and offer effectiveness.
  - **Random Model**: Uses predefined configurations to randomly assign offers.
  - **Picker Model**: This model selects products to include in product-based offers.
  
- **Workflow**:
  - **Random Lane Workflow**: Manages the random assignment of offers.
  - **Uplift Workflow**: Involves data preparation, training, ranking, and assembling uplift-based offers.
  - **Hybrid Champion Model**: A model combining results from multiple uplift models across offer deployments.
  - **Picker Model Workflow**: Selects products for inclusion in product-based offers.

- **Model Registration**:
  - Models are registered in **MLFlow** using a consistent naming convention:
    - **Random Model**: `{app_name}_{model_type}_{offer_construct}_{offer_duration}`
    - **Uplift Model**: `{app_name}_{model_type}_{offer_construct}_{offer_duration}_{model_category}`
    - **Control Model**: `{app_name}_{model_type}`
  
- **Executing the Modeling Workflow**:
  - Create a feature branch in Git.
  - Run the **Quickstart Script** to populate model training and registration configurations.
  - Trigger the **Main Modeling Workflow Pipeline** in Azure Data Factory (ADF) to begin the model training and registration process.

#### **3. Monarch Workflow Phase**

The **Monarch Workflow** is responsible for assigning the trained models to customers and ensuring the proper deployment of personalized offers.

- **Steps**:
  1. **Offer Deployment**: Get the list of offers to be deployed.
  2. **Offer Routing**: Route customers to the appropriate model based on the splitting ratio.
  3. **Model Application**: Apply the selected model to assign the correct offer to each customer.
  4. **QA File Generation**: If the offer is optimized, generate a QA file for review and approval before final deployment.
  5. **Offer Delivery**: Once approved, or if no optimization is needed, deliver the offer to the customer and send out a confirmation email.

- **Offer Optimization**:
  - Offers are either **optimized** (based on model output) or **explicit** (manually selected).
  - Optimized offers go through a quality assurance (QA) process, while explicit offers are directly delivered.

- **Offer Deployment Pipeline**:
  - The pipeline checks the offer details, filters the data, and proceeds with the offer deployment if conditions are met.
  - **Notifications** are sent at each key stage of the process, including offer start, model assembly, QA approval, and offer delivery.

### **Conclusion**

The Next Gen Platform (NGP) is an advanced, machine-learning-driven system designed to enhance Starbucks' customer engagement through personalized offers. By combining robust data extraction, model training, and the Monarch Workflow, NGP ensures that customers receive relevant and timely offers via email. This dynamic platform not only optimizes the process of offer deployment but also ensures ongoing improvements through real-time analysis and feedback.

---

This structured documentation provides a comprehensive overview of NGP while being accessible to new learners. Let me know if you need further adjustments or additions!
